server:
  servlet:
    context-path: /api/v1
  tomcat: 
    mbeanregistry:
      enabled: true

logging:
  file:
    name: /app/logs/application.log
  level:
    root: info
    

spring:

  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 10MB

  application:
    name: hof

  security:
    user:
      name: admin
      password: admin123
      roles: ADMIN
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_OAUTH_CLIENT_ID}
            client-secret: ${GOOGLE_OAUTH_CLIENT_SECRET}
            scope:
            - email

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local} 
    include:
      - db
      - s3
      - mongo
      - iamport
      - vision
      - oauth

  datasource:
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    url: ${DB_URL}:3306/hof?connectTimeout=5000&socketTimeout=10000 
    password: ${DB_PASSWORD}

  mail:
    host: smtp.gmail.com
    port: 587
    username: hhj8159@gmail.com
    password: xlxd kuoi gmnv pnbg
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
      auth-code-expiration-millis: 1800000


      
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        '[format_sql]': true
        '[use_sql_comments]': true
    show-sql: true # SQL 로그 출력
    database-platform: org.hibernate.dialect.MariaDBDialect

  data:
    mongodb:
      uri: ${MONGO_URL}
      username: ${MONGO_USERNAME}
  
iamport:
  api-key: ${IAMPORT_API_KEY}
  api-secret: ${IAMPORT_API_SECRET}
      
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.lshwan.hof.domain.entity
  configuration:
    lazy-loading-enabled: true
    map-underscore-to-camel-case: true
    aggressive-lazy-loading: false
    default-statement-timeout: 30   

google:
  vision:
    credentials:
      type: service_account
      project_id: ${GOOGLE_PROJECT_ID}
      private_key_id: ${GOOGLE_PRIVATE_KEY_ID}
      private_key: ${GOOGLE_PRIVATE_KEY}  # 환경 변수에서 로드
      client_email: ${GOOGLE_CLIENT_EMAIL}
      client_id: ${GOOGLE_CLIENT_ID}
      auth_uri: https://accounts.google.com/o/oauth2/auth
      token_uri: https://oauth2.googleapis.com/token
      auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
      client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/${GOOGLE_CLIENT_EMAIL}


aws:
  s3:
    access-key: ${AWS_ACCESS_KEY_ID}
    secret-key: ${AWS_SECRET_ACCESS_KEY}
    bucket-name: ${AWS_S3_BUCKET_NAME}
    region: ${AWS_REGION}

management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /actuator
  metrics:
    tags:
      application: hof-spring-boot-app
springdoc:
  swagger-ui:
    enabled: true   
    path: /swag  