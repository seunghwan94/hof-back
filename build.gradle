plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco' // JaCoCo 플러그인 추가
}

test {
    useJUnitPlatform() // JUnit5 사용 시 추가
    finalizedBy jacocoTestReport // 테스트 실행 후 JaCoCo 리포트 생성
}

jacocoTestReport {
    dependsOn test // 테스트 실행 후 리포트 생성
    reports {
        html {
            enabled true
            destination file("$buildDir/reports/jacoco/test/html") // HTML 리포트 출력 폴더 지정
        }
    }
}


configurations {
	all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	all*.exclude group: 'org.springframework.boot', module: 'logback-classic'
}

group = 'com.lshwan'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	testImplementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'


	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	
	// swagger
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.7.0'
	// mybatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'

	// AWS SDK for S3
	implementation 'software.amazon.awssdk:s3:2.20.112'  // 버전 명시적으로 추가
	implementation 'software.amazon.awssdk:core:2.20.112'  // core 의존성 추가
	implementation platform('software.amazon.awssdk:bom:2.20.112')  // BOM 관리

	// Crawlling
	implementation 'org.seleniumhq.selenium:selenium-java:4.28.1'
	implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.28.1'

	// Prometheus & Actuator 
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// Jakarta Servlet api
	compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'


	// implementation 'io.jsonwebtoken:jjwt:0.12.6'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

	// thumbnailator 이미지
	implementation 'net.coobird:thumbnailator:0.4.8'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:3.4.2'
	// implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
	implementation 'org.glassfish:jakarta.el:4.0.2'

	// Crawling 의존성
	implementation 'commons-io:commons-io:2.11.0'
	// JSON 파싱 (IAMPORT API 응답 처리)
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	// IAMPORT API 요청을 위한 RestTemplate 사용
  implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Jwt lib
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'

	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
	
	// mail인증
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	// websocket
	implementation("org.springframework.boot:spring-boot-starter-websocket:3.4.1")
	//Vision API
	implementation 'com.google.cloud:google-cloud-vision:3.34.0'
	// oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.4.3'

}

tasks.named('test') {
	useJUnitPlatform()
}
processResources {
    from('src/main/resources') {
        include '**/*.json'
    }
}